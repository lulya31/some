@startuml C2

!include static/includes/c4_context.puml
!include static/includes/c4_container.puml
!include static/includes/c4_component.puml

skinparam backgroundcolor transparent
skinparam minClassWidth 200
skinparam linetype ortho
skinparam nodesep 50

LAYOUT_TOP_DOWN()

/'
    1. Линии сделать толстым и выделить разным цветом в зависимости от назначения:
    2. обращение в БД (толстые синие линии)
3. REST-вызовы внутренние и от пользователей (толстые зеленые линии)
    4. Асинхронное взаимодействие (kafka и - толстые зеленые линии
5. Отправка уведомлений (webscoket) - толстые оранжевые линии
    6. Связь модулей (обычные линии, как сейчас)
    7. HTTP-вызовы к внешним системам (толстые черные)
    8. Добавить легенду.
    9. Добавить еще внешние системы Рольф и связь с Internal Integration
    10. Добавить связь с оперсистемами (Oracle)
'/

AddRelTag("database", $textColor="blue", $lineColor="blue", $lineStyle=BoldLine())
AddRelTag("rest", $textColor="green", $lineColor="green", $lineStyle=BoldLine())
AddRelTag("async", $textColor="green", $lineColor="plum", $lineStyle=BoldLine())
AddRelTag("webscoket", $textColor="orange", $lineColor="orange", $lineStyle=BoldLine())
AddRelTag("http", $textColor="black", $lineColor="black", $lineStyle=BoldLine())

System(rolf, "SYSTEM", "", $sprite="img:./static/06_01_img/rolf_logo_2020.png{scale=0.2}", $link="/06_c4_infrastructure/")
System_Ext(external_systems, "Внешние системы", "", $sprite="img:./static/06_01_img/internal_systems.png{scale=1}")
System_Ext(internal_systems, "Внутренние системы Рольф", "", $sprite="img:./static/06_01_img/internal_systems.png{scale=1}")
System_Ext(oper_systems, "Оперсистемы", "ORACLE", $sprite="img:./static/06_01_img/internal_systems.png{scale=1}")

System_Boundary(flora, "Система Flora", "Система Flora"){
    System_Boundary(frontend, "FrontEnd", "FrontEnd"){
        Container(asp_sell, "ASP-SELL", "VueJS, TypeScript", $sprite="img:./static/06_01_img/asp_sell.png{scale=1}")
        Container(crm, "CRM", "VueJS, TypeScript", $sprite="img:./static/06_01_img/crm.png{scale=1}")
        Container(auto_card, "AUTO-CARD", "VueJS, TypeScript", $sprite="img:./static/06_01_img/auto_card.png{scale=1}")
        Container(client_card, "CLIENT-CARD", "VueJS, TypeScript", $sprite="img:./static/06_01_img/client_card.png{scale=1}")
        Container(employee_card, "EMPLOYEE-CARD", "VueJS, TypeScript", $sprite="img:./static/06_01_img/employee_card.png{scale=1}")
        Container(dc_card, "DC-CRAD", "VueJS, TypeScript", $sprite="img:./static/06_01_img/dc_card.png{scale=1}")
        Container(flora_core_app, "FLORA CORE APP", "VueJS, TypeScript", $sprite="img:./static/06_01_img/flora_core_app2.png{scale=1}")
        Container(fi, "F&I", "VueJS, TypeScript", $sprite="img:./static/06_01_img/fi.png{scale=1}", $link="https://doc-fi-main.com-dev.int.rolfcorp.ru/01_overview/02_architecture/02_c4_tech_scheme/")
        Container(frontend_service, "SERVICE", "VueJS, TypeScript", $sprite="img:./static/06_01_img/frontend_service.png{scale=1}")
        Container(adminka, "ADMINKA", "VueJS, TypeScript", $sprite="img:./static/06_01_img/adminka.png{scale=1}")
        Container(company_card, "COMPANY-CARD", "VueJS, TypeScript", $sprite="img:./static/06_01_img/company_card.png{scale=1}")
        Container(desktop, "DESKTOP", "VueJS, TypeScript", $sprite="img:./static/06_01_img/desktop.png{scale=1}")
        Container(pforms, "PFORMS", "VueJS, TypeScript", $sprite="img:./static/06_01_img/pforms.png{scale=1}")
        Container(storybook, "STORYBOOK", "VueJS, TypeScript", $sprite="img:./static/06_01_img/storybook.png{scale=1}")
        Container(widgets, "WIDGETS", "VueJS, TypeScript", $sprite="img:./static/06_01_img/widgets.png{scale=1}")
    }

    Container_Boundary(infra, "Infrastructure", ""){
        Container(apim, "APIM", "", $sprite="img:./static/06_01_img/leroy_logo.png{scale=0.15}")
        Container(centrifugo, "Centrifugo (WSS)", "", $sprite="img:./static/06_01_img/centrifugo_soc.png{scale=0.1}")
        'Container(centrifugo, "Centrifugo (WSS)", "", $sprite="img:./static/06_01_img/logo_animated_no_accel.svg{scale=0.075}")
        Container(kafka, "Kafka", "", $sprite="img:./static/06_01_img/kafka_logo.png{scale=0.2}")
    }

    Container_Boundary(experience, "EXPERIENCE", "EXPERIENCE"){
        Container(service, "Service", "Platformeco", $sprite="img:./static/06_01_img/frontend_service.png{scale=1}")
        Container(f_and_i, "F&I", "Platformeco", $sprite="img:./static/06_01_img/fi.png{scale=1}", $link="https://doc-fi-main.com-dev.int.rolfcorp.ru/01_overview/02_architecture/02_c4_tech_scheme/")
        Container(asp_and_na, "ASP & NA", "Platformeco", $sprite="img:./static/06_01_img/asp_sell.png{scale=1}")
        Container(mes, "MES", "Platformeco", $sprite="img:./static/06_01_img/mes.png{scale=1}")
    }

    Container_Boundary(core, "CORE", "CORE"){
        Container(orders, "Orders", "Platformeco", $sprite="img:./static/06_01_img/orders.png{scale=1}")
        Container(communications, "Communications", "Platformeco", $sprite="img:./static/06_01_img/communications.png{scale=1}")
        Container(coreapp, "Coreapp", "Platformeco", $sprite="img:./static/06_01_img/flora_core_app2.png{scale=1}")
        Container(task_and_events, "Task and Events", "Platformeco", $sprite="img:./static/06_01_img/task_and_events.png{scale=1}")
        Container(rolfid, "RolfID", "Platformeco", $sprite="img:./static/06_01_img/rolfid.png{scale=1}")
        Container(carid, "CarID", "Platformeco", $sprite="img:./static/06_01_img/carid.png{scale=1}")
        Container(clientid, "ClientID", "Platformeco", $sprite="img:./static/06_01_img/client_card.png{scale=1}")
        Container(mdm, "MDM", "Platformeco", $sprite="img:./static/06_01_img/mdm.png{scale=1}")
        Container(external_integration, "External Integration", "Platformeco", $sprite="img:./static/06_01_img/integration.png{scale=1}")
        Container(internal_integration, "Internal Integration", "Platformeco", $sprite="img:./static/06_01_img/integration.png{scale=1}")
        Container(payments, "Payments", "Platformeco", $sprite="img:./static/06_01_img/payments.png{scale=1}")
        Container(printservice, "Print service", "NodeJS", $sprite="img:./static/06_01_img/printservice.png{scale=1}")
        Container(printformsanalize, "Print forms analize", "NodeJS", $sprite="img:./static/06_01_img/printformsanalize.png{scale=1}")
    }

    System_Boundary(infrastructure, "Infrastructure (DB, ETC)", "Infrastructure (DB, ETC)"){
        ContainerDb(postgresql, "", "", $sprite="img:./static/06_01_img/postgresql_logo.png{scale=0.5}")
        ContainerDb(s3, "S3", "", $sprite="img:./static/06_01_img/s3_logo.png{scale=0.075}")
        ContainerDb(mongodb, "", "", $sprite="img:./static/06_01_img/mongodb_logo.png{scale=0.75}")
        ContainerDb(opensearch, "", "", $sprite="img:./static/06_01_img/opensearch_logo.png{scale=0.175}")
        Container(keycloak, "Keycloak", "", $sprite="img:./static/06_01_img/keycloak_logo.png{scale=0.4}")
        Container(grafana, "", "", $sprite="img:./static/06_01_img/grafana_logo.png{scale=0.05}")
    }

    Lay_D(asp_sell, client_card)
    Lay_D(client_card, flora_core_app)
    Lay_D(employee_card, crm)
    Lay_D(crm, flora_core_app)
    Lay_D(frontend_service, auto_card)
    Lay_D(auto_card, flora_core_app)
    Lay_D(fi, desktop)
    Lay_D(desktop, flora_core_app)
    Lay_D(client_card, flora_core_app)
    Lay_D(crm, flora_core_app)
    Lay_D(auto_card, flora_core_app)
    Lay_D(desktop, flora_core_app)
    Lay_D(flora_core_app, pforms)
    Lay_D(flora_core_app, storybook)
    Lay_D(flora_core_app, widgets)
    Lay_D(pforms, company_card)
    Lay_D(storybook, adminka)
    Lay_D(widgets, dc_card)

    Lay_D(dc_card, centrifugo)
    Lay_D(adminka, apim)
    Lay_D(company_card, kafka)

    Lay_D(kafka, f_and_i)
    Lay_D(apim, asp_and_na)
    Lay_D(centrifugo, service)
    
    'Lay_D(f_and_i, mes)
    'Lay_D(asp_and_na, mes)
    Lay_D(service, mes)

    Lay_D(mes, clientid)

    Lay_D(clientid, carid)
    Lay_D(communications, coreapp)
    Lay_D(payments, printservice)
    Lay_D(orders, printformsanalize)
    Lay_D(task_and_events, mdm)
    Lay_D(carid, internal_integration)
    Lay_D(coreapp, external_integration)
    Lay_D(printservice, rolfid)

    Lay_D(rolfid, opensearch)
    Lay_D(opensearch, postgresql)
    Lay_D(s3, grafana)
    Lay_D(keycloak, mongodb)

    BiRel_U(flora_core_app, employee_card, "")
    BiRel_U(flora_core_app, asp_sell, "")
    BiRel_U(flora_core_app, frontend_service, "")
    BiRel_U(flora_core_app, fi, "")
    BiRel_U(flora_core_app, crm, "")
    BiRel_U(flora_core_app, client_card, "")
    BiRel_U(flora_core_app, auto_card, "")
    BiRel_U(flora_core_app, desktop, "")
    
    BiRel_D(flora_core_app, pforms, "")
    BiRel_D(flora_core_app, storybook, "")
    BiRel_D(flora_core_app, widgets, "")
    BiRel_D(flora_core_app, company_card, "")
    BiRel_D(flora_core_app, adminka, "")
    BiRel_D(flora_core_app, dc_card, "")

    BiRel_U(apim, frontend, "", $tags="rest")
    BiRel_D(apim, experience, "", $tags="rest")
    BiRel_D(apim, core, "", $tags="rest")

    Rel(kafka, core, "", $tags="async")
    Rel(kafka, experience, "", $tags="async")

    BiRel(core, opensearch, "", $tags="database")
    BiRel(experience, opensearch, "", $tags="database")
    Rel(mes, service, "")
    BiRel(printservice, s3, "", $tags="database")

    BiRel(postgresql, core, "", $tags="database")

    Rel_U(centrifugo, frontend, "", $tags="async")
    BiRel(centrifugo, task_and_events, "", $tags="webscoket")
    BiRel_U(keycloak, rolfid, "")
}

Lay_D(external_integration, external_systems)
Lay_D(mongodb, internal_systems)
Lay_D(mongodb, oper_systems)

Rel_D(rolf, flora, "")

Lay_D(grafana, external_systems)
BiRel_D(external_integration, external_systems, "", $tags="http")
BiRel_D(internal_integration, internal_systems, "", $tags="http")
BiRel_D(core, oper_systems, "", $tags="http")

SHOW_LEGEND()

@enduml